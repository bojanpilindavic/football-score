{"version":3,"sources":["components/Navbar.js","App.js","serviceWorker.js","store/reducers/teamReducer.js","store/actions/actionTypes.js","store/store.js","store/actions/teamActions.js","components/Main.js","components/MatchResult.js","components/Table.js","index.js"],"names":["FootballNavbar","props","Navbar","bg","variant","Brand","Nav","className","Link","as","to","App","React","Component","Boolean","window","location","hostname","match","initialState","teams","selectedTeams","fixtures","loading","setTeams","state","action","Object","assign","fetchTeamsStart","fetchTeamsSuccess","fetchTeamsFail","setSelectedTeams","setFixtures","teamReducer","type","createStore","applyMiddleware","thunk","Main","selectTeam","team","onSetSelectedTeams","gg","gw","gl","gd","points","push","selectFixtures","onSetFixtures","t","i","length","j","firstMatch","homeTeam","awayTeam","secondMatch","disableButton","teamName","find","e","name","onFetchTeams","this","class","ListGroup","map","index","Form","Button","size","disabled","id","onClick","Image","src","img","connect","store","console","log","dispatch","axios","get","then","res","data","catch","err","error","payload","MatchResults","updateTeam","teamId","status","calculateTeamScore","fixture","fixtureId","side","goals","align","rowData","scope","min","max","onChange","evt","target","value","Table","updateTable","sort","a","b","app","exact","path","component","MatchResult","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9f3c25ab.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst FootballNavbar = props => {\r\n  let content = (\r\n    <Navbar bg=\"dark\" variant=\"dark\">\r\n      <Navbar.Brand>Football Score</Navbar.Brand>\r\n      <Nav className=\"mr-auto\">\r\n        <Nav.Link as={Link} to=\"/\">\r\n          Create league\r\n        </Nav.Link>\r\n      </Nav>\r\n      <Nav className=\"mr-auto\">\r\n        <Nav.Link as={Link} to=\"/Table\">\r\n          Table\r\n        </Nav.Link>\r\n      </Nav>\r\n      <Nav className=\"mr-auto\">\r\n        <Nav.Link as={Link} to=\"/MatchResults\">\r\n          Results\r\n        </Nav.Link>\r\n      </Nav>\r\n    </Navbar>\r\n  );\r\n  return content;\r\n};\r\n\r\nexport default FootballNavbar;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport FootballNavbar from \"./components/Navbar\";\n\nclass App extends React.Component {\n  render() {\n    return <FootballNavbar />;\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  teams: [],\r\n  selectedTeams: [],\r\n  fixtures: [],\r\n  loading: false\r\n};\r\n\r\nconst setTeams = (state, action) => {\r\n  return Object.assign({}, state, {\r\n    teams: action.teams\r\n  });\r\n};\r\n\r\nconst fetchTeamsStart = (state, action) => {\r\n  return Object.assign({}, state, {\r\n    loading: true\r\n  });\r\n};\r\n\r\nconst fetchTeamsSuccess = (state, action) => {\r\n  return Object.assign({}, state, {\r\n    teams: action.teams,\r\n    loading: false\r\n  });\r\n};\r\n\r\nconst fetchTeamsFail = (state, action) => {\r\n  return Object.assign({}, state, {\r\n    loading: false\r\n  });\r\n};\r\n\r\nconst setSelectedTeams = (state, action) => {\r\n  return Object.assign({}, state, {\r\n    selectedTeams: action.selectedTeams\r\n  });\r\n};\r\n\r\nconst setFixtures = (state, action) => {\r\n  return Object.assign({}, state, {\r\n    fixtures: action.fixtures\r\n  });\r\n};\r\n\r\nconst teamReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_TEAMS:\r\n      return setTeams(state, action);\r\n    case actionTypes.SET_SELECTED_TEAM:\r\n      return setSelectedTeams(state, action);\r\n    case actionTypes.SET_FIXTURES:\r\n      return setFixtures(state, action);\r\n    case actionTypes.FETCH_TEAMS_START:\r\n      return fetchTeamsStart(state, action);\r\n    case actionTypes.FETCH_TEAMS_SUCCESS:\r\n      return fetchTeamsSuccess(state, action);\r\n    case actionTypes.FETCH_TEAMS_FAIL:\r\n      return fetchTeamsFail(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default teamReducer;\r\n","export const SET_TEAMS = 'SET_TEAMS'\r\nexport const SET_SELECTED_TEAM = 'SET_SELECTED_TEAM'\r\nexport const SET_FIXTURES = 'SET_FIXTURES'\r\nexport const SET_FIXTURES_SCORE = 'SET_FIXTURES_SCORE'\r\nexport const FETCH_TEAMS_START = 'FETCH_TEAMS_START'\r\nexport const FETCH_TEAMS_SUCCESS = 'FETCH_TEAMS_SUCCESS'\r\nexport const FETCH_TEAMS_FAIL = 'FETCH_TEAMS_FAIL'","import { createStore, applyMiddleware } from 'redux';\r\nimport teamReducer from './reducers/teamReducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nexport default createStore(teamReducer, applyMiddleware(thunk));\r\n","import axios from \"axios\";\r\n\r\nimport * as actionTypes from \"./actionTypes\";\r\n\r\nexport const setTeams = teams => {\r\n  return {\r\n    type: actionTypes.SET_TEAMS,\r\n    teams: teams\r\n  };\r\n};\r\n\r\nexport const setSelectedTeams = selectedTeams => {\r\n  return {\r\n    type: actionTypes.SET_SELECTED_TEAM,\r\n    selectedTeams: selectedTeams\r\n  };\r\n};\r\n\r\nexport const setFixtures = fixtures => {\r\n  return {\r\n    type: actionTypes.SET_FIXTURES,\r\n    fixtures: fixtures\r\n  };\r\n};\r\n\r\n\r\nexport const fetchTeamsSuccess = teams => {\r\n  return {\r\n    type: actionTypes.FETCH_TEAMS_SUCCESS,\r\n    teams: teams\r\n  };\r\n};\r\n\r\nexport const fetchTeamsFail = error => {\r\n  return {\r\n    type: actionTypes.FETCH_TEAMS_FAIL,\r\n    error: error\r\n  };\r\n};\r\n\r\nexport const fetchTeamsStart = () => {\r\n  return {\r\n    type: actionTypes.FETCH_TEAMS_START\r\n  };\r\n};\r\n\r\nexport const fetchTeams = () => {\r\n  return dispatch => {\r\n    dispatch(fetchTeamsStart());\r\n    axios\r\n      .get(\"https://api.myjson.com/bins/1dvuky\")\r\n      .then(res => {\r\n        dispatch(fetchTeamsSuccess(res.data.teams));\r\n      })\r\n      .catch(err => {\r\n        dispatch(fetchTeamsFail(err));\r\n      });\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setSelectedTeams,\r\n  setFixtures,\r\n  fetchTeams\r\n} from \"../store/actions/teamActions\";\r\nimport { Form, ListGroup, Button, Image } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nclass Main extends Component {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  selectTeam = team => {\r\n    const { selectedTeams, onSetSelectedTeams } = this.props;\r\n    team.gg = 0;\r\n    team.gw = 0;\r\n    team.gl = 0;\r\n    team.gd = 0;\r\n    team.points = 0;\r\n    selectedTeams.push(team);\r\n    onSetSelectedTeams(selectedTeams);\r\n    this.selectFixtures(selectedTeams);\r\n  };\r\n\r\n  selectFixtures = teams => {\r\n    const { onSetFixtures } = this.props;\r\n    const t = teams;\r\n    const fixtures = [];\r\n\r\n    for (let i = 0; i < t.length - 1; i++) {\r\n      for (let j = i + 1; j < t.length; j++) {\r\n        let firstMatch = {\r\n          homeTeam: t[i],\r\n          awayTeam: t[j]\r\n        };\r\n        fixtures.push(firstMatch);\r\n      }\r\n      for (let j = i + 1; j < t.length; j++) {\r\n        let secondMatch = {\r\n          homeTeam: t[j],\r\n          awayTeam: t[i]\r\n        };\r\n        fixtures.push(secondMatch);\r\n      }\r\n    }\r\n    onSetFixtures(fixtures);\r\n  };\r\n  disableButton = teamName => {\r\n    const { selectedTeams } = this.props;\r\n    const findTeam = selectedTeams.find(e => e.name === teamName);\r\n    if (findTeam) {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { onFetchTeams } = this.props;\r\n    onFetchTeams();\r\n  }\r\n\r\n  render() {\r\n    const { teams } = this.props;\r\n\r\n    return (\r\n      <div class=\"container\">\r\n        <ListGroup className=\"list-group list-group-horizontal\">\r\n          {teams.length > 0 &&\r\n            teams.map((team, index) => (\r\n              <Form className=\"mt-5 mb-5\">\r\n                <Button\r\n                  size=\"lg\"\r\n                  type=\"button\"\r\n                  className=\"btn btn-dark\"\r\n                  disabled={this.disableButton(team.name)}\r\n                  id={team.points}\r\n                  name={team.name}\r\n                  onClick={() => this.selectTeam(team)}\r\n                >\r\n                  <Image\r\n                    className=\"img-thumbnail\"\r\n                    src={team.img}\r\n                  />\r\n                </Button>\r\n              </Form>\r\n            ))}\r\n        </ListGroup>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  console.log(\"store\", store);\r\n  return {\r\n    teams: store.teams,\r\n    selectedTeams: store.selectedTeams,\r\n    fixtures: store.fixtures\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onFetchTeams: () => dispatch(fetchTeams()),\r\n    onSetFixtures: payload => dispatch(setFixtures(payload)),\r\n    onSetSelectedTeams: payload => dispatch(setSelectedTeams(payload))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setSelectedTeams, setFixtures } from \"../store/actions/teamActions\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nclass MatchResults extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  updateTeam = (teamId, status) => {\r\n    const { selectedTeams, onSetSelectedTeams } = this.props;\r\n    selectedTeams.map(team => {\r\n      if (team.id === teamId ) {\r\n        if (status === 0) {\r\n          team.gg += 1;\r\n          team.gd += 1;\r\n          team.points += 1;\r\n        } else if (status === 1) {\r\n          team.gg += 1;\r\n          team.gw += 1;\r\n          team.points += 3;\r\n        } else if (status === 2) {\r\n          team.gg += 1;\r\n          team.gl += 1;\r\n        }\r\n\r\n        return team;\r\n      }\r\n    });\r\n    onSetSelectedTeams(selectedTeams);\r\n  };\r\n\r\n  calculateTeamScore = team => {\r\n    const { fixtures, onSetFixtures } = this.props;\r\n    let fixture = fixtures[team.fixtureId];\r\n    fixture[team.side].goals = team.goals;\r\n\r\n    if (fixture.homeTeam.goals && fixture.awayTeam.goals) {\r\n      if (fixture.homeTeam.goals === fixture.awayTeam.goals) {\r\n        this.updateTeam(fixture.homeTeam.id, 0);\r\n        this.updateTeam(fixture.awayTeam.id, 0);\r\n      } else if (fixture.homeTeam.goals > fixture.awayTeam.goals) {\r\n        this.updateTeam(fixture.homeTeam.id, 1);\r\n        this.updateTeam(fixture.awayTeam.id, 2);\r\n      }\r\n      if (fixture.homeTeam.goals < fixture.awayTeam.goals) {\r\n        this.updateTeam(fixture.homeTeam.id, 2);\r\n        this.updateTeam(fixture.awayTeam.id, 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { fixtures } = this.props;\r\n\r\n    return (\r\n      <div class=\"container\">\r\n         <Form className=\"mt-5 mb-5\">\r\n         <table className=\"table table-dark\" align=\"center\">\r\n          <thead>\r\n            <tr>\r\n              <th>No.</th>\r\n              <th>Home Team</th>\r\n              <th>Home Score</th>\r\n              <th>vs</th>\r\n              <th>Away Score</th>\r\n              <th class=\"col-md-4\">Away Team</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {fixtures.map((rowData, index) => (\r\n              <tr>\r\n                <td scope=\"row\">{index + 1}</td>\r\n                <td>{rowData.homeTeam.name}</td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                    max=\"9\"\r\n                    size=\"4\"\r\n                    onChange={evt =>\r\n                      this.calculateTeamScore({\r\n                        fixtureId: index,\r\n                        side: \"homeTeam\",\r\n                        teamId: rowData.homeTeam.id,\r\n                        goals: evt.target.value\r\n                      })\r\n                    }\r\n                  ></input>\r\n                </td>\r\n                <td>:</td>\r\n                <td>\r\n                  <input\r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                    max=\"9\"\r\n                    size=\"4\"\r\n                    onChange={evt =>\r\n                      this.calculateTeamScore({\r\n                        fixtureId: index,\r\n                        side: \"awayTeam\",\r\n                        teamId: rowData.awayTeam.id,\r\n                        goals: evt.target.value\r\n                      })\r\n                    }\r\n                  ></input>\r\n                </td>\r\n                <td>{rowData.awayTeam.name}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n         </Form>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = store => {\r\n  console.log(\"store\", store);\r\n  return {\r\n    teams: store.teams,\r\n    selectedTeams: store.selectedTeams,\r\n    fixtures: store.fixtures\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSetSelectedTeams: payload => dispatch(setSelectedTeams(payload)),\r\n    onSetFixtures: payload => dispatch(setFixtures(payload))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MatchResults);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setSelectedTeams\r\n} from \"../store/actions/teamActions\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\n\r\nclass Table extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  updateTable = selectedTeams => {\r\n    selectedTeams.sort((a, b) => (a.points > b.points ? -1 : 1));\r\n  };\r\n  render() {\r\n    const { selectedTeams } = this.props;\r\n    {\r\n      this.updateTable(selectedTeams);\r\n    }\r\n    return (\r\n      <div class=\"container\">\r\n        <Form className=\"mt-5 mb-5\">\r\n        <table className=\"table table-sm table-dark\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">No.</th>\r\n              <th scope=\"col\">Team</th>\r\n              <th scope=\"col\">Games</th>\r\n              <th scope=\"col\">GW</th>\r\n              <th scope=\"col\">GD</th>\r\n              <th scope=\"col\">GL</th>\r\n              <th scope=\"col\">Pts</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {selectedTeams.length > 0 &&\r\n              selectedTeams.map((rowData, index) => (\r\n                <tr>\r\n                  <th scope=\"row\">{index + 1}</th>\r\n                  <td>{rowData.name}</td>\r\n                  <td>{rowData.gg}</td>\r\n                  <td>{rowData.gw}</td>\r\n                  <td>{rowData.gd}</td>\r\n                  <td>{rowData.gl}</td>\r\n                  <td>{rowData.points}</td>\r\n                </tr>\r\n              ))}\r\n          </tbody>\r\n        </table>\r\n        </Form>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n  console.log(\"store\", store);\r\n  return {\r\n    teams: store.teams,\r\n    selectedTeams: store.selectedTeams,\r\n    fixtures: store.fixtures\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSetSelectedTeams: payload => dispatch(setSelectedTeams(payload))\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store/store'\nimport Main from './components/Main'\nimport MatchResult from './components/MatchResult'\nimport Table from './components/Table'\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nconst app = (\n    <Provider store={store}>\n      <Router>\n        <App />\n          <Route exact path=\"/\" component={Main} />\n          <Route path=\"/Table\" component={Table} />\n          <Route path=\"/MatchResults\" component={MatchResult} />\n      </Router>\n    </Provider>\n  )\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}